"""Create notes table

Revision ID: 0c040c72190a
Revises: 607e2fda5453
Create Date: 2025-06-05 17:54:28.964562

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '0c040c72190a'
down_revision = '607e2fda5453'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if notes table already exists before creating it
    connection = op.get_bind()
    inspector = sa.inspect(connection)

    if 'notes' not in inspector.get_table_names():
        # Create table only if it doesn't exist
        op.create_table('notes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('session_id', sa.String(length=255), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('tags', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
        )

        # Create indexes only if table was created
        op.create_index('ix_notes_created_at', 'notes', ['created_at'], unique=False)
        op.create_index('ix_notes_session_id', 'notes', ['session_id'], unique=False)
        print("✅ Created notes table and indexes")
    else:
        print("ℹ️  Notes table already exists, skipping creation")

        # Check and create indexes if they don't exist
        existing_indexes = [idx['name'] for idx in inspector.get_indexes('notes')]

        if 'ix_notes_created_at' not in existing_indexes:
            op.create_index('ix_notes_created_at', 'notes', ['created_at'], unique=False)
            print("✅ Created ix_notes_created_at index")

        if 'ix_notes_session_id' not in existing_indexes:
            op.create_index('ix_notes_session_id', 'notes', ['session_id'], unique=False)
            print("✅ Created ix_notes_session_id index")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_notes_session_id', table_name='notes')
    op.drop_index('ix_notes_created_at', table_name='notes')
    op.drop_table('notes')
    # ### end Alembic commands ###
